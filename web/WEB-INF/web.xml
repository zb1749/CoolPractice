<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!-- 定义Struts 2的FilterDispathcer的Filter -->
    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>
    <!--FilterDispatcher用来初始化struts2并且处理所有的WEB请求。-->
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    <!-- spring configuration - contextConfigLocation spring 的组件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/spring/spring-security.xml</param-value>
    </context-param>
    <!--spring security-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/login</url-pattern><!--配制成 /login 而不是 /* ，因为我这是个测试项目-->
    </filter-mapping>

    <!-- 定义Filter -->
    <filter>
        <!-- Filter的名字，相当于指定@WebFilter
            的filterName属性 -->
        <filter-name>log</filter-name>
        <!-- Filter的实现类 -->
        <filter-class>filter.LogFilter</filter-class>
    </filter>
    <!-- 定义Filter拦截的URL地址 -->
    <filter-mapping>
        <!-- Filter的名字 -->
        <filter-name>log</filter-name>
        <!-- Filter负责拦截的URL，相当于指定@WebFilter
            的urlPatterns属性 -->
        <url-pattern>/filter/*</url-pattern>
    </filter-mapping>

    <!-- 定义Filter -->
    <filter>
        <!-- Filter的名字 -->
        <filter-name>authority</filter-name>
        <!-- Filter的实现类 -->
        <filter-class>filter.AuthorityFilter</filter-class>
        <!-- 下面三个init-param元素配置了三个参数 -->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>loginPage</param-name>
            <param-value>/filter/login</param-value>
        </init-param>
        <init-param>
            <param-name>proLogin</param-name>
            <param-value>/filter/proLogin</param-value>
        </init-param>
    </filter>
    <!-- 定义Filter拦截的URL地址 -->
    <filter-mapping>
        <!-- Filter的名字 -->
        <filter-name>authority</filter-name>
        <!-- Filter负责拦截的URL -->
        <url-pattern>/filter/*</url-pattern>
    </filter-mapping>

    <display-name>Kevin`s Practice Display</display-name>
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

</web-app>